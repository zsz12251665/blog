var
	field:array[1..39,1..39]of integer;
	n,i,j,t:integer;
begin
	read(n);
	for i:=1 to n do// Initialize the field array
		for j:=1 to n do
			field[i,j]:=0;
	i:=1;
	j:=n div 2+1;
	for t:=1 to n*n do// Put the numbers into the field array
		begin
			field[i,j]:=t;
			if (i=1) and (j<>n) then
				begin
					i:=n;
					inc(j);
					continue;
				end;
			if (i<>1) and (j=n) then
				begin
					dec(i);
					j:=1;
					continue;
				end;
			if (i=1) and (j=n) or (field[i-1,j+1]<>0) then
				inc(i)
			else
				begin
					dec(i);
					inc(j);
				end;
		end;
	for i:=1 to n do// Print the field array
		begin
			for j:=1 to n do
				write(field[i,j],' ');
			writeln;
		end;
end.

#include<cstdio>
using namespace std;
int field[39][39];
int main()
{
	int n,i,j;
	scanf("%d",&n);
	for(i=0;i<n;i++)// Initialize the field array
		for(j=0;j<n;j++)
			field[i][j]=0;
	i=0;
	j=n/2;
	for(int t=1;t<=n*n;t++)// Put the numbers into the field array
	{
		field[i][j]=t;
		if(i==0 && j!=n-1)
		{
			i=n-1;
			j++;
			continue;
		}
		if(i!=0 && j==n-1)
		{
			i--;
			j=0;
			continue;
		}
		if(i==0 && j==n-1 || field[i-1][j+1]!=0)
			i++;
		else
		{
			i--;
			j++;
		}
	}
	for(i=0;i<n;i++)// Print the field array
	{
		for(j=0;j<n;j++)
			printf("%d ",field[i][j]);
		printf("\n");
	}
	return 0;
}
