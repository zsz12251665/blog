var
	mf_set:array[1..1000]of integer;//The array mf_set is the merge-find set
	is_counted:array[1..1000]of boolean;
	t,ti,n,m,sum,i,a,b:integer;
function find(a:integer):integer;
begin
	if mf_set[a]<>a then
		mf_set[a]:=find(mf_set[a]);
	exit(mf_set[a]);
end;
begin
	read(t);
	for ti:=1 to t do
		begin
			sum:=0;
			read(n,m);
			for i:=1 to n do//Initialize the arrays
				begin
					mf_set[i]:=i;
					is_counted[i]:=false;
				end;
			for i:=1 to m do
				begin
					read(a,b);
					mf_set[find(a)]:=find(b);//Merge the sets
				end;
			for i:=1 to n do//Count the number of the tables
				if not is_counted[find(i)] then
					begin
						is_counted[find(i)]:=true;
						inc(sum);
					end;
			writeln(sum);
		end;
end.

#include<cstdio>
int mf_set[1000];//The array mf_set is the merge-find set
bool is_counted[1000];
int find(int a)
{
	if(mf_set[a]!=a)
		mf_set[a]=find(mf_set[a]);
	return mf_set[a];
}
int main()
{
	int t;
	for(scanf("%d",&t);t>0;t--)
	{
		int n,m,sum=0;
		scanf("%d%d",&n,&m);
		for(int i=0;i<n;i++)//Initialize the arrays
		{
			mf_set[i]=i;
			is_counted[i]=false;
		}
		for(int i=0,a,b;i<m;i++)
		{
			scanf("%d%d",&a,&b);
			mf_set[find(a-1)]=find(b-1);//Merge the sets
		}
		for(int i=0;i<n;i++)//Count the number of the tables
			if(!is_counted[find(i)])
			{
				is_counted[find(i)]=true;
				sum++;
			}
		printf("%d\n",sum);
	}
	return 0;
}
