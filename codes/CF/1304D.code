var
	s:ansistring;
	g,l:array[1..200000]of longint;// g[i] is the number of '>' following consecutively and l[i] is the number of '<' following consecutively
	t,ti:integer;
	n,i,last:longint;
begin
	readln(t);
	for ti:=1 to t do
		begin
			readln(n,s);
			s:=copy(s,2,n);// There is a space between n and s, which becomes part of s
			g[n]:=0;// Calculate g[i] and l[i]
			l[n]:=0;
			for i:=n-1 downto 1 do
				if s[i]='<' then
					begin
						g[i]:=0;
						l[i]:=l[i+1]+1;
					end
				else
					begin
						g[i]:=g[i+1]+1;
						l[i]:=0;
					end;
			write(n-l[1]);// The lexicographically largest sequence
			last:=n;
			for i:=2 to n do
				begin
					if s[i-1]='>' then
						last:=n+1-i;
					write(' ',last-l[i]);
				end;
			writeln;
			write(1+g[1]);// The lexicographically smallest sequence
			last:=1;
			for i:=2 to n do
				begin
					if s[i-1]='<' then
						last:=i;
					write(' ',last+g[i]);
				end;
			writeln;
		end;
end.

#include<cstdio>
using namespace std;
char s[200000];
long g[200000],l[200000];// g[i] is the number of '>' following consecutively and l[i] is the number of '<' following consecutively
int main()
{
	int t;
	for(scanf("%d",&t);t>0;--t)
	{
		long n;
		scanf("%ld%s",&n,s);
		g[n-1]=l[n-1]=0;// Calculate g[i] and l[i]
		for(long i=n-2;i>=0;--i)
		{
			g[i]=(s[i]=='<')?0:g[i+1]+1;
			l[i]=(s[i]=='>')?0:l[i+1]+1;
		}
		printf("%ld",n-l[0]);// The lexicographically largest sequence
		for(long i=1,last=n;i<n;++i)
		{
			if(s[i-1]=='>')
				last=n-i;
			printf(" %ld",last-l[i]);
		}
		putchar('\n');
		printf("%ld",1+g[0]);// The lexicographically smallest sequence
		for(long i=1,last=1;i<n;++i)
		{
			if(s[i-1]=='<')
				last=1+i;
			printf(" %ld",last+g[i]);
		}
		putchar('\n');
	}
	return 0;
}
