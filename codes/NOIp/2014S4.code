uses math;//We need to use the max function and the min function in math
var
	k:array[0..128,0..128]of longint;
	d,n,i,j,x,y,cnt:integer;
	ans,sum:int64;
	begin
	cnt:=0;
	ans:=0;
	read(d,n);
	for i:=0 to 128 do//Initialize the k array
		for j:=0 to 128 do
			k[i,j]:=0;
	for i:=1 to n do
		begin
			read(x,y);
			read(k[x,y]);
		end;
	for x:=0 to 128 do//Enumerate the transmitter
		for y:=0 to 128 do
			begin
				sum:=0;//Calculate the sum of the matrix with the center of (x,y)
				for i:=max(0,x-d) to min(128,x+d) do//To avoid the array overlimited, we use the max function and the min function
					for j:=max(0,y-d) to min(128,y+d) do
						sum:=sum+k[i,j];
				if sum=ans then//Count the number of the solution
					inc(cnt);
				if sum>ans then//Update the best solution
					begin
						ans:=sum;
						cnt:=1;//Reset the counter
					end;
			end;
	write(cnt,' ',ans);
end.

#include<cstdio>
#include<cmath>//We need to use the fmax function and the fmin function in cmath
long k[129][129];
int main()
{
	int d,n,cnt=0;
	long long ans=0;
	scanf("%d%d",&d,&n);
	for(int i=0;i<129;i++)//Initialize the k array
		for(int j=0;j<129;j++)
			k[i][j]=0;
	for(int i=0,x,y;i<n;i++)
	{
		scanf("%d%d",&x,&y);
		scanf("%ld",&k[x][y]);
	}
	for(int x=0;x<129;x++)//Enumerate the center of the transmitter
		for(int y=0;y<129;y++)
		{
			long long sum=0;//Calculate the sum of the matrix with the center of (x,y)
			for(int i=fmax(0,x-d);i<=fmin(128,x+d);i++)//To avoid the array overlimited, we use the fmax function and the fmin function
				for(int j=fmax(0,y-d);j<=fmin(128,y+d);j++)
					sum+=k[i][j];
			if(sum==ans)//Count the number of the solution
				cnt++;
			if(sum>ans)//Update the best solution
			{
				ans=sum;
				cnt=1;//Reset the counter
			}
		}
	printf("%d %lld",cnt,ans);
	return 0;
}